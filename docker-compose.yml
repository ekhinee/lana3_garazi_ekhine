version: '3.8'

services:
      
  mysql:
    image: mysql:5.7
    container_name: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: mbtidb
      MYSQL_USER: user
      MYSQL_PASSWORD: pass
    ports:
      - "3307:3306"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data:/data
    command: --secure-file-priv=/data
    networks:
      - lana3_net
     
  mosquitto:
    image: eclipse-mosquitto
    container_name: mosquitto
    ports:
      - "1883:1883"
    volumes:
      - ./mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - lana3_net
  
  python:
    build: 
      context: .
      dockerfile: Dockerfile.python
    container_name: python
    networks:
      - lana3_net
    depends_on:
      - mosquitto
  
  zookeeper:
    image: zookeeper:3.4.9
    restart: unless-stopped
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    networks:
      - lana3_net

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "9094:9094"
    depends_on:
      - zookeeper
    environment:
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9094,OUTSIDE://localhost:9092
#      - KAFKA_LISTENERS=INSIDE://:9094,OUTSIDE://:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="user_behavior:1:1" 
      - KAFKA_BROKER_ID=1   
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - lana3_net
      
  kafka-connect:
    image: confluentinc/cp-kafka-connect:5.1.0
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9094"
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_PLUGIN_PATH: '/usr/share/java,/etc/kafka-connect/jars'
      CONNECT_CONFLUENT_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./jars/:/etc/kafka-connect/jars
    networks:
      - lana3_net
     
      
  jobmanager:
    image: flink:1.17.1
    container_name: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class:org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9091
    ports:
      - "8081:8081"
    command: jobmanager
    volumes:
      - ./jars_flink/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar
      - ./jars_flink/flink-connector-jdbc-3.1.0-1.17.jar:/opt/flink/lib/flink-connector-jdbc-3.1.0-1.17.jar
      - ./jars_flink/flink-connector-redis-1.3.0-jar-with-dependencies.jar:/opt/flink/lib/flink-connector-redis-1.3.0-jar-with-dependencies.jar
      - ./jars_flink/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar:/opt/flink/lib/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar
      - ./jars_flink/flink-sql-connector-kafka-3.1.0-1.17.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.17.jar
      - ./jars_flink/flink-json-1.17.1.jar:/opt/flink/lib/flink-json-1.17.1.jar
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - ./jars_flink/postgresql-42.6.0.jar:/opt/flink/lib/postgresql-42.6.0.jar
      #- ./jars_flink/elasticsearch-rest-high-level-client-7.17.3.jar:/opt/flink/lib/elasticsearch-rest-high-level-client-7.17.3.jar
      #- ./jars_flink/elasticsearch-7.17.3.jar:/opt/flink/lib/elasticsearch-7.17.3.jar
    networks:
      - lana3_net
      
  taskmanager:
    image: flink:1.17.1
    container_name: taskmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        metrics.reporters: prom
        metrics.reporter.prom.factory.class: org.apache.flink.metrics.prometheus.PrometheusReporterFactory
        metrics.reporter.prom.port: 9091
    depends_on:
      - jobmanager
    command: taskmanager
    volumes:
      - ./jars_flink/flink-sql-connector-mysql-cdc-2.4.1.jar:/opt/flink/lib/flink-sql-connector-mysql-cdc-2.4.1.jar
      - ./jars_flink/flink-connector-jdbc-3.1.0-1.17.jar:/opt/flink/lib/flink-connector-jdbc-3.1.0-1.17.jar
      - ./jars_flink/flink-connector-redis-1.3.0-jar-with-dependencies.jar:/opt/flink/lib/flink-connector-redis-1.3.0-jar-with-dependencies.jar
      - ./jars_flink/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar:/opt/flink/lib/flink-sql-connector-elasticsearch7-3.0.1-1.17.jar
      - ./jars_flink/flink-sql-connector-kafka-3.1.0-1.17.jar:/opt/flink/lib/flink-sql-connector-kafka-3.1.0-1.17.jar
      - ./jars_flink/flink-json-1.17.1.jar:/opt/flink/lib/flink-json-1.17.1.jar
      - ./flink-conf.yaml:/opt/flink/conf/flink-conf.yaml
      - ./jars_flink/postgresql-42.6.0.jar:/opt/flink/lib/postgresql-42.6.0.jar
      #- ./jars_flink/elasticsearch-rest-high-level-client-7.17.3.jar:/opt/flink/lib/elasticsearch-rest-high-level-client-7.17.3.jar
      #- ./jars_flink/elasticsearch-7.17.3.jar:/opt/flink/lib/elasticsearch-7.17.3.jar
    networks:
      - lana3_net


  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.6.0
    container_name: elasticsearch
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - discovery.type=single-node
      - xpack.security.enabled=false
      - cluster.routing.allocation.disk.threshold_enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    networks:
      - lana3_net
        
  kibana:
    image: docker.elastic.co/kibana/kibana:7.6.0
    container_name: kibana
    ports:
      - "5601:5601"
    networks:
      - lana3_net

  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: 
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: mbti_analytics
    ports:
      - "5432:5432"
    networks:
      - lana3_net
      
  superset:
    build: 
      context: .
      dockerfile: Dockerfile.superset
    container_name: superset
    environment:
      - SUPERSET_SECRET_KEY=supersecretkey777
      - SQLALCHEMY_DATABASE_URI=sqlite:////app/superset.db
      - FLASK_ENV=production
    ports:
      - "8088:8088"
    depends_on:
      - postgres
    volumes:
      - ./superset_config.py:/app/pythonpath/superset_config.py
    networks:
      - lana3_net
    restart: always
    


volumes:
  superset_home:

networks:
  lana3_net:
    name: lana3_net
    driver: bridge


